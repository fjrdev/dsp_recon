#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("a_address0", 7, hls_out, 0, "ap_memory", "mem_address", 1),
	Port_Property("a_ce0", 1, hls_out, 0, "ap_memory", "mem_ce", 1),
	Port_Property("a_q0", 32, hls_in, 0, "ap_memory", "mem_dout", 1),
	Port_Property("b_address0", 7, hls_out, 1, "ap_memory", "mem_address", 1),
	Port_Property("b_ce0", 1, hls_out, 1, "ap_memory", "mem_ce", 1),
	Port_Property("b_q0", 32, hls_in, 1, "ap_memory", "mem_dout", 1),
	Port_Property("c_address0", 7, hls_out, 2, "ap_memory", "mem_address", 1),
	Port_Property("c_ce0", 1, hls_out, 2, "ap_memory", "mem_ce", 1),
	Port_Property("c_we0", 1, hls_out, 2, "ap_memory", "mem_we", 1),
	Port_Property("c_d0", 32, hls_out, 2, "ap_memory", "mem_din", 1),
	Port_Property("c_address1", 7, hls_out, 2, "ap_memory", "MemPortADDR2", 1),
	Port_Property("c_ce1", 1, hls_out, 2, "ap_memory", "MemPortCE2", 1),
	Port_Property("c_q1", 32, hls_in, 2, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("size", 32, hls_in, 3, "ap_none", "in_data", 1),
	Port_Property("s_axi_BUS_A_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_AWADDR", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_ARADDR", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "mac";
